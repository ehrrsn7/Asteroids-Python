Class: Game
--------------------------------------------------
Components:
+ dark_mode         : bool
+ background_color  : arcade.color (tuple)
+ ship              : Ship
+ score             : On_Screen_Text
+ level             : On_Screen_Text
+ bullets           : list[] of Bullets
+ rocks             : list[] of Rocks
+ state             : int
+ held_keys         : set
+ release_kraken    : bool
+ hints             : bool
--------------------------------------------------
Methods:
Initialize
+ __init__(width, height)
+ initialize_background_color()

Draw
+ on_draw()
+ draw_all_objects()
+ draw_rifle()
+ draw_bullets()
+ draw_rocks()
+ draw_score()
+ draw_level()
+ draw_on_screen_text(on_screen_text)
+ draw_main_menu_screen()
+ draw_game_over_info()
+ display_hints()
+ draw_new_level_screen()

State
+ resume()
+ pause()
+ main_menu()
+ new_level()
+ game_over()
+ initialize_state()
+ troll()
+ hints()

Dark Mode
+ is_dark_mode()
+ set_dark_mode()
+ set_light_mode()
+ toggle_dark_mode()

Logic
+ toggle(condition)

Advance
+ update(delta_time)
+ advance_targets()
+ advance_bullets()

Events (Handle Input)
+ on_mouse_motion(x: float, 
                y: float, 
                dx: float, 
                dy: float)
+ on_key_press(   key: int
                modifiers: int)
+ on_key_release( key: int
                modifiers: int)
+ fire_bullet()

Check Collisions
+ check_collisions()
+ check_too_close(projectile1: Projectile
                projectile2: Projectile)
+ cleanup_zombies()
+ check_off_screen()
+ clear_all_objects()
+ clear_all_bullets()
+ clear_all_rocks()
+ _get_angle_degrees( x: float,
                    y: float)
--------------------------------------------------